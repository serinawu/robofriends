{"ast":null,"code":"var _jsxFileName = \"/Users/serina/Desktop/robofriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css'; //Props are simply things that come out of \"state\"\n//So a parent feeds \"state\" into  a child component and as soon as child (components)components receives a \"state\" it's a property. That child can never change that property. \n// The parent just tells it what the \"state\" is and the child receives it as \"robots\"\n// So the first things we need to do is to start being able to use \"state\" in our app,\n// the description of what our \"state\" should be\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n      console.log(event.target.value);\n    };\n\n    this.state = {\n      robots: [],\n      searchfield: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  } // react don't use arrow function\n\n\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase()); // if name of the robots in lowercase includes - and this does the comparison\n      // if anything in the sting includes\"toLowerCase\", then only return the robots that return true\n    });\n\n    if (this.state.robots.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tc\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"f1\",\n          children: \"RoboFriends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n          searchChange: this.onSearchChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n          children: /*#__PURE__*/_jsxDEV(CardList, {\n            robots: filteredRobots\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/serina/Desktop/robofriends/src/containers/App.js"],"names":["React","Component","CardList","SearchBox","Scroll","App","constructor","onSearchChange","event","setState","searchfield","target","value","console","log","state","robots","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,WAAP,C,CAEA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AACxBK,EAAAA,WAAW,GAAG;AACV;;AADU,SAedC,cAfc,GAeGC,KAAD,IAAU;AACtB,WAAKC,QAAL,CAAe;AAACC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA3B,OAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACH,KAlBa;;AAEV,SAAKG,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETN,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AAEDO,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADjB,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKb,QAAL,CAAc;AAAEO,MAAAA,MAAM,EAAEM;AAAV,KAAd,CAFf;AAGH,GAbuB,CAc5B;;;AAOIC,EAAAA,MAAM,GAAI;AACN,UAAMC,cAAc,GAAG,KAAKT,KAAL,CAAWC,MAAX,CAAkBS,MAAlB,CAAyBC,KAAK,IAAG;AACpD,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC,KAAKd,KAAL,CAAWL,WAAX,CAAuBkB,WAAvB,EAAlC,CAAP,CADoD,CAEpD;AACA;AACH,KAJsB,CAAvB;;AAKA,QAAI,KAAKb,KAAL,CAAWC,MAAX,CAAkBc,MAAlB,KAA6B,CAAjC,EAAqC;AACjC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO;AACP,0BACI;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA,gCACA;AAAI,UAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,SAAD;AAAW,UAAA,YAAY,EAAE,KAAKvB;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA,QAAC,MAAD;AAAA,iCACI,QAAC,QAAD;AAAU,YAAA,MAAM,EAAEiB;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AASH;AACJ;;AAxC2B;;AA4C5B,eAAenB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport CardList from '../components/CardList' ;\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll' ;\nimport './App.css' ;\n\n//Props are simply things that come out of \"state\"\n//So a parent feeds \"state\" into  a child component and as soon as child (components)components receives a \"state\" it's a property. That child can never change that property. \n// The parent just tells it what the \"state\" is and the child receives it as \"robots\"\n// So the first things we need to do is to start being able to use \"state\" in our app,\n// the description of what our \"state\" should be\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=> response.json())\n        .then(users => this.setState({ robots: users}));\n    }\n// react don't use arrow function\n\n    onSearchChange= (event)=> {\n        this.setState( {searchfield: event.target.value} )\n        console.log(event.target.value);\n    }\n\n    render () {\n        const filteredRobots = this.state.robots.filter(robot =>{\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n            // if name of the robots in lowercase includes - and this does the comparison\n            // if anything in the sting includes\"toLowerCase\", then only return the robots that return true\n        })\n        if (this.state.robots.length === 0 ) {\n            return <h1>Loading</h1>\n        } else {\n        return (\n            <div className='tc'>\n            <h1 className='f1'>RoboFriends</h1>\n            <SearchBox searchChange={this.onSearchChange}/>\n            <Scroll>\n                <CardList robots={filteredRobots}/>\n            </Scroll>\n            </div>\n        );\n    }\n}\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}