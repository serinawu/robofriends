[{"/Users/serina/Desktop/robofriends/src/index.js":"1","/Users/serina/Desktop/robofriends/src/reportWebVitals.js":"2","/Users/serina/Desktop/robofriends/src/robots.js":"3","/Users/serina/Desktop/robofriends/src/containers/App.js":"4","/Users/serina/Desktop/robofriends/src/components/SearchBox.js":"5","/Users/serina/Desktop/robofriends/src/components/Scroll.js":"6","/Users/serina/Desktop/robofriends/src/components/CardList.js":"7","/Users/serina/Desktop/robofriends/src/components/Card.js":"8","/Users/serina/Desktop/robofriends/src/components/ErrorBoundry.js":"9"},{"size":481,"mtime":1622620808952,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1621932272268,"results":"12","hashOfConfig":"11"},{"size":1285,"mtime":1622104387053,"results":"13","hashOfConfig":"11"},{"size":2016,"mtime":1622798373348,"results":"14","hashOfConfig":"11"},{"size":352,"mtime":1622113488715,"results":"15","hashOfConfig":"11"},{"size":225,"mtime":1622564769257,"results":"16","hashOfConfig":"11"},{"size":351,"mtime":1622112032361,"results":"17","hashOfConfig":"11"},{"size":365,"mtime":1622104801573,"results":"18","hashOfConfig":"11"},{"size":467,"mtime":1622798311616,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ymdbj3",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/serina/Desktop/robofriends/src/index.js",[],"/Users/serina/Desktop/robofriends/src/reportWebVitals.js",[],["40","41"],"/Users/serina/Desktop/robofriends/src/robots.js",[],"/Users/serina/Desktop/robofriends/src/containers/App.js",["42"],"import React, { Component } from 'react';\nimport CardList from '../components/CardList' ;\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll' ;\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css' ;\n\n//Props are simply things that come out of \"state\"\n//So a parent feeds \"state\" into  a child component and as soon as child (components)components receives a \"state\" it's a property. That child can never change that property. \n// The parent just tells it what the \"state\" is and the child receives it as \"robots\"\n// So the first things we need to do is to start being able to use \"state\" in our app,\n// the description of what our \"state\" should be\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=> response.json())\n        .then(users => this.setState({ robots: users}));\n    }\n// react don't use arrow function\n\n    onSearchChange= (event)=> {\n        this.setState( {searchfield: event.target.value} )\n        console.log(event.target.value);\n    }\n\n    render () {\n        const {robots, searchfield} = this.state;\n        const filteredRobots = this.state.robots.filter(robot =>{\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n            // if name of the robots in lowercase includes - and this does the comparison\n            // if anything in the sting includes\"toLowerCase\", then only return the robots that return true\n        })\n        return !robots.length?\n        <h1>Loading</h1>:\n        (\n            <div className='tc'>\n            <h1 className='f1'>RoboFriends</h1>\n            <SearchBox searchChange={this.onSearchChange}/>\n            <Scroll>\n                <CardList robots={filteredRobots}/>\n            </Scroll>\n            </div>\n        );\n    }\n}\n\nexport default App;","/Users/serina/Desktop/robofriends/src/components/SearchBox.js",[],"/Users/serina/Desktop/robofriends/src/components/Scroll.js",[],"/Users/serina/Desktop/robofriends/src/components/CardList.js",[],"/Users/serina/Desktop/robofriends/src/components/Card.js",[],"/Users/serina/Desktop/robofriends/src/components/ErrorBoundry.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":5,"column":8,"nodeType":"49","messageId":"50","endLine":5,"endColumn":20},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'ErrorBoundry' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]